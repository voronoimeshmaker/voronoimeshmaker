<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="ShapeFactory_8h" kind="file" language="C++">
    <compoundname>ShapeFactory.h</compoundname>
    <includes refid="Shape_8h" local="no">VoronoiMeshMaker/Shape/Shape.h</includes>
    <includes refid="GeometricDataHolder_8h" local="no">VoronoiMeshMaker/Parameters/GeometricDataHolder.h</includes>
    <includedby refid="Ellipse_8cpp" local="no">VoronoiMeshMaker/src/VoronoiMeshMaker/Shape/Shape2D/Ellipse.cpp</includedby>
    <includedby refid="Rectangle_8cpp" local="no">VoronoiMeshMaker/src/VoronoiMeshMaker/Shape/Shape2D/Rectangle.cpp</includedby>
    <includedby refid="Star_8cpp" local="no">VoronoiMeshMaker/src/VoronoiMeshMaker/Shape/Shape2D/Star.cpp</includedby>
    <includedby refid="ShapeFactory_8cpp" local="no">VoronoiMeshMaker/src/VoronoiMeshMaker/Shape/ShapeFactory.cpp</includedby>
    <incdepgraph>
      <node id="9">
        <label>list</label>
      </node>
      <node id="3">
        <label>VoronoiMeshMaker/Misc/ID.h</label>
      </node>
      <node id="6">
        <label>variant</label>
      </node>
      <node id="5">
        <label>map</label>
      </node>
      <node id="7">
        <label>string_view</label>
      </node>
      <node id="2">
        <label>VoronoiMeshMaker/Shape/Shape.h</label>
        <link refid="Shape_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>VoronoiMeshMaker/Parameters/GeometricDataHolder.tpp</label>
        <link refid="GeometricDataHolder_8tpp"/>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
      <node id="14">
        <label>CGAL/Polyhedron_3.h</label>
      </node>
      <node id="15">
        <label>VoronoiMeshMaker/Misc/namespace.h</label>
        <link refid="namespace_8h"/>
      </node>
      <node id="13">
        <label>CGAL/Polygon_2.h</label>
      </node>
      <node id="8">
        <label>VoronoiMeshMaker/Misc/type.h</label>
        <link refid="type_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>VoronoiMeshMaker/include/VoronoiMeshMaker/Shape/ShapeFactory.h</label>
        <link refid="ShapeFactory_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>memory</label>
      </node>
      <node id="4">
        <label>VoronoiMeshMaker/Parameters/GeometricDataHolder.h</label>
        <link refid="GeometricDataHolder_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>CGAL/Exact_predicates_inexact_constructions_kernel.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3">
        <label>VoronoiMeshMaker/src/VoronoiMeshMaker/Shape/Shape2D/Rectangle.cpp</label>
        <link refid="Rectangle_8cpp"/>
      </node>
      <node id="5">
        <label>VoronoiMeshMaker/src/VoronoiMeshMaker/Shape/ShapeFactory.cpp</label>
        <link refid="ShapeFactory_8cpp"/>
      </node>
      <node id="2">
        <label>VoronoiMeshMaker/src/VoronoiMeshMaker/Shape/Shape2D/Ellipse.cpp</label>
        <link refid="Ellipse_8cpp"/>
      </node>
      <node id="4">
        <label>VoronoiMeshMaker/src/VoronoiMeshMaker/Shape/Shape2D/Star.cpp</label>
        <link refid="Star_8cpp"/>
      </node>
      <node id="1">
        <label>VoronoiMeshMaker/include/VoronoiMeshMaker/Shape/ShapeFactory.h</label>
        <link refid="ShapeFactory_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceShapeFactory">ShapeFactory</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ShapeFactory_8h_1a0883ace577b59185cdb8e3ba8c10778a" prot="public" static="no">
        <type>std::shared_ptr&lt; ShapeFactory &gt;</type>
        <definition>PtrShapeFactoryShared</definition>
        <argsstring></argsstring>
        <name>PtrShapeFactoryShared</name>
        <briefdescription>
<para>Defines a shared pointer to a <ref refid="namespaceShapeFactory" kindref="compound">ShapeFactory</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para>This typedef is useful for managing shared ownership of <ref refid="namespaceShapeFactory" kindref="compound">ShapeFactory</ref> instances. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="VoronoiMeshMaker/include/VoronoiMeshMaker/Shape/ShapeFactory.h" line="97" column="1" bodyfile="VoronoiMeshMaker/include/VoronoiMeshMaker/Shape/ShapeFactory.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ShapeFactory_8h_1a6025e475118117652c70276915155ab2" prot="public" static="no">
        <type>std::shared_ptr&lt; const ShapeFactory &gt;</type>
        <definition>PtrConstShapeFactoryShared</definition>
        <argsstring></argsstring>
        <name>PtrConstShapeFactoryShared</name>
        <briefdescription>
<para>Defines a shared pointer to a const <ref refid="namespaceShapeFactory" kindref="compound">ShapeFactory</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para>This typedef is used when shared ownership of a constant <ref refid="namespaceShapeFactory" kindref="compound">ShapeFactory</ref> instance is required. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="VoronoiMeshMaker/include/VoronoiMeshMaker/Shape/ShapeFactory.h" line="105" column="1" bodyfile="VoronoiMeshMaker/include/VoronoiMeshMaker/Shape/ShapeFactory.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ShapeFactory.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Author<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Joao<sp/>Flavio<sp/>Vieira<sp/>de<sp/>Vasconcellos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Version<sp/><sp/><sp/><sp/><sp/>:<sp/>1.0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Description<sp/>:<sp/>Definition<sp/>of<sp/>the<sp/>ShapeFactory<sp/>class<sp/>for<sp/>creating<sp/>shape<sp/>objects</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dynamically<sp/>based<sp/>on<sp/>type<sp/>registration.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/><sp/><sp/>:<sp/>Copyright<sp/>(C)<sp/>&lt;2024&gt;<sp/><sp/>Joao<sp/>Flavio<sp/>Vieira<sp/>de<sp/>Vasconcellos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(jflavio<sp/>at<sp/>iprj.uerj.br)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__VORONOIMESHMAKER_SHAPEFACTORY_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__VORONOIMESHMAKER_SHAPEFACTORY_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Includes<sp/>from<sp/>VoronoiMeshMaker<sp/>library</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="Shape_8h" kindref="compound">VoronoiMeshMaker/Shape/Shape.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="GeometricDataHolder_8h" kindref="compound">VoronoiMeshMaker/Parameters/GeometricDataHolder.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="namespaceShapeFactory" refkind="compound"><highlight class="normal"><ref refid="namespace_8h_1a0850a440be7718d521600f120ee783e5" kindref="member">VORMAKER_NAMESPACE_OPEN</ref></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="namespaceShapeFactory" kindref="compound">ShapeFactory</ref><sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="61" refid="namespaceShapeFactory_1a5c4a56e76762fae068353f05c4d2f364" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceShapeFactory_1a5c4a56e76762fae068353f05c4d2f364" kindref="member">registerShape</ref>()<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static_assert(std::is_base_of&lt;Shape,<sp/>T&gt;::value,<sp/></highlight><highlight class="stringliteral">&quot;T<sp/>must<sp/>derive<sp/>from<sp/>Shape&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceShapeFactory_1a495f0014db753978ce1364099deadfe2" kindref="member">shapeRegistry</ref>[<ref refid="namespaceEllipse_1a48f785621b17176a53b5c5a4c949a8c8" kindref="member">T::getClassID</ref>()]<sp/>=<sp/>[](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGeometricDataHolder" kindref="compound">GeometricDataHolder</ref>&amp;<sp/>data)<sp/>-&gt;<sp/>std::shared_ptr&lt;Shape&gt;<sp/>{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_shared&lt;T&gt;(data);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::shared_ptr&lt;Shape&gt;<sp/><ref refid="namespaceShapeFactory_1aa2f74fd2cca4387407b168a73299bc85" kindref="member">createShape</ref>(<ref refid="namespaceClassID" kindref="compound">ClassID</ref><sp/><ref refid="namespaceShape_1aa16b693ea1cd2fe7ecf68e79160f62cc" kindref="member">classID</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGeometricDataHolder" kindref="compound">GeometricDataHolder</ref>&amp;<sp/>data);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="84" refid="namespaceShapeFactory_1a495f0014db753978ce1364099deadfe2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::map&lt;ClassID,<sp/>std::function&lt;std::shared_ptr&lt;Shape&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceGeometricDataHolder" kindref="compound">GeometricDataHolder</ref>&amp;)&gt;&gt;<sp/><ref refid="namespaceShapeFactory_1a495f0014db753978ce1364099deadfe2" kindref="member">shapeRegistry</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Typedefs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">//==============================================================================</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="ShapeFactory_8h_1a0883ace577b59185cdb8e3ba8c10778a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="ShapeFactory_8h_1a0883ace577b59185cdb8e3ba8c10778a" kindref="member">PtrShapeFactoryShared</ref><sp/>=<sp/>std::shared_ptr&lt;ShapeFactory&gt;;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="ShapeFactory_8h_1a6025e475118117652c70276915155ab2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="ShapeFactory_8h_1a6025e475118117652c70276915155ab2" kindref="member">PtrConstShapeFactoryShared</ref><sp/>=<sp/>std::shared_ptr&lt;const<sp/>ShapeFactory&gt;;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="namespace_8h_1a79d315e8c3400ea5f4ad4175a85d291c" kindref="member">VORMAKER_NAMESPACE_CLOSE</ref></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>__VORONOIMESHMAKER_SHAPEFACTORY_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="VoronoiMeshMaker/include/VoronoiMeshMaker/Shape/ShapeFactory.h"/>
  </compounddef>
</doxygen>
