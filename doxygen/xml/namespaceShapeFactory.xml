<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceShapeFactory" kind="namespace" language="C++">
    <compoundname>ShapeFactory</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceShapeFactory_1a495f0014db753978ce1364099deadfe2" prot="private" static="yes" mutable="no">
        <type>std::map&lt; ClassID, std::function&lt; std::shared_ptr&lt; Shape &gt;const GeometricDataHolder &amp;)&gt; &gt;</type>
        <definition>std::map&lt;ClassID, std::function&lt;std::shared_ptr&lt;Shape&gt;const GeometricDataHolder&amp;)&gt; &gt; ShapeFactory::shapeRegistry</definition>
        <argsstring></argsstring>
        <name>shapeRegistry</name>
        <briefdescription>
<para>Registry mapping ClassIDs to shape creation functions. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="VoronoiMeshMaker/include/VoronoiMeshMaker/Shape/ShapeFactory.h" line="84" column="23" bodyfile="VoronoiMeshMaker/include/VoronoiMeshMaker/Shape/ShapeFactory.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceShapeFactory_1a5c4a56e76762fae068353f05c4d2f364" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void ShapeFactory::registerShape</definition>
        <argsstring>()</argsstring>
        <name>registerShape</name>
        <briefdescription>
<para>Registers a shape type in the factory using its <ref refid="namespaceClassID" kindref="compound">ClassID</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>This function associates a <ref refid="namespaceClassID" kindref="compound">ClassID</ref> with a function that creates an instance of the shape when provided with a <ref refid="namespaceGeometricDataHolder" kindref="compound">GeometricDataHolder</ref>.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of shape to be registered. T must derive from <ref refid="namespaceShape" kindref="compound">Shape</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="VoronoiMeshMaker/include/VoronoiMeshMaker/Shape/ShapeFactory.h" line="61" column="17" bodyfile="VoronoiMeshMaker/include/VoronoiMeshMaker/Shape/ShapeFactory.h" bodystart="61" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="namespaceShapeFactory_1aa2f74fd2cca4387407b168a73299bc85" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; Shape &gt;</type>
        <definition>std::shared_ptr&lt; Shape &gt; ShapeFactory::createShape</definition>
        <argsstring>(ClassID classID, const GeometricDataHolder &amp;data)</argsstring>
        <name>createShape</name>
        <param>
          <type>ClassID</type>
          <declname>classID</declname>
        </param>
        <param>
          <type>const GeometricDataHolder &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Creates a shape based on its <ref refid="namespaceClassID" kindref="compound">ClassID</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>Finds the associated shape creation function in the registry using the provided <ref refid="namespaceClassID" kindref="compound">ClassID</ref> and returns a shared pointer to the newly created shape, initialized with the provided data.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>classID</parametername>
</parameternamelist>
<parameterdescription>
<para>The shared <ref refid="classID" kindref="compound">ID</ref> of the shape to create. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The geometric data used to initialize the shape. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::shared_ptr&lt;Shape&gt; A shared pointer to the created shape. </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>if the <ref refid="namespaceClassID" kindref="compound">ClassID</ref> is not found in the registry.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This method looks up the provided <ref refid="namespaceClassID" kindref="compound">ClassID</ref> in the shape registry to find the corresponding creation function. If found, it uses this function to create and return an instance of the shape.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>classID</parametername>
</parameternamelist>
<parameterdescription>
<para>The shared <ref refid="classID" kindref="compound">ID</ref> of the shape to create. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The geometric data used to initialize the shape. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::shared_ptr&lt;Shape&gt; A shared pointer to the created shape. </para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>if the <ref refid="namespaceClassID" kindref="compound">ClassID</ref> is not found in the registry. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="VoronoiMeshMaker/include/VoronoiMeshMaker/Shape/ShapeFactory.h" line="80" column="28" bodyfile="VoronoiMeshMaker/src/VoronoiMeshMaker/Shape/ShapeFactory.cpp" bodystart="67" bodyend="88" declfile="VoronoiMeshMaker/include/VoronoiMeshMaker/Shape/ShapeFactory.h" declline="80" declcolumn="28"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="VoronoiMeshMaker/include/VoronoiMeshMaker/Shape/ShapeFactory.h" line="34" column="1"/>
  </compounddef>
</doxygen>
