<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classExportStrategy" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>ExportStrategy</compoundname>
    <basecompoundref refid="classID" prot="public" virt="non-virtual">ID</basecompoundref>
    <includes refid="ExportStrategy_8h" local="no">include/VoronoiMeshMaker/DataExporter/ExportStrategy.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classExportStrategy_1ae02f9a6a0467e576351ec2cc7e69d493" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="virtual">
        <type>std::string_view</type>
        <definition>virtual std::string_view ExportStrategy::className</definition>
        <argsstring>() const noexcept override</argsstring>
        <name>className</name>
        <reimplements refid="classID_1aa24a23fc35c047319634ca6693c671b6">className</reimplements>
        <briefdescription>
<para>Get the class name. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A string view representing the name of this class. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VoronoiMeshMaker/DataExporter/ExportStrategy.h" line="68" column="30" bodyfile="include/VoronoiMeshMaker/DataExporter/ExportStrategy.h" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classExportStrategy_1a763418edadbda99832c2f46bf3b3a121" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual ExportStrategy::~ExportStrategy</definition>
        <argsstring>()=default</argsstring>
        <name>~ExportStrategy</name>
        <briefdescription>
<para>Virtual destructor to ensure proper cleanup of derived classes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VoronoiMeshMaker/DataExporter/ExportStrategy.h" line="85" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classExportStrategy_1acc77c6a8a3edc8c19553f53e74031eb3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void ExportStrategy::exportData</definition>
        <argsstring>(const GeometricDataHolder &amp;data, const std::string &amp;filename) const =0</argsstring>
        <name>exportData</name>
        <param>
          <type>const <ref refid="classGeometricDataHolder" kindref="compound">GeometricDataHolder</ref> &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
<para>Exports the provided geometric data to the specified file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The geometric data to be exported. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>The output file name. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VoronoiMeshMaker/DataExporter/ExportStrategy.h" line="93" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classID_1a0ebe5e78a0d04e6cd581e9099e25bb8f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="virtual">
        <type>ClassID</type>
        <definition>virtual ClassID ID::classID</definition>
        <argsstring>() const noexcept</argsstring>
        <name>classID</name>
        <reimplementedby refid="classVMMException_1ab83d7ec9ea7a83ebfd3ee6d860a70268">classID</reimplementedby>
        <reimplementedby refid="classGeometricDataHolder_1ae6cc84ef17fb7fa914956417654199d3">classID</reimplementedby>
        <briefdescription>
<para>Retrieves the unique identifier (<ref refid="classID" kindref="compound">ID</ref>) for the class. </para>
        </briefdescription>
        <detaileddescription>
<para>This function returns the unique identifier for the class, represented by the <computeroutput><ref refid="namespaceClassID" kindref="compound">ClassID</ref></computeroutput> enum. By default, it returns <computeroutput><ref refid="namespaceClassID_1ab0fb1bfed3c5b91a6efef2d6bbf77917" kindref="member">ClassID::None</ref></computeroutput>.</para>
<para><simplesect kind="return"><para>The unique class identifier as a <computeroutput><ref refid="namespaceClassID" kindref="compound">ClassID</ref></computeroutput> enum value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VoronoiMeshMaker/Misc/id.h" line="116" column="21" bodyfile="include/VoronoiMeshMaker/Misc/id.h" bodystart="116" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classID_1a97ae807633a588fe5418bfd18cb58549" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ID::sameClass</definition>
        <argsstring>(const ID &amp;other) const noexcept</argsstring>
        <name>sameClass</name>
        <param>
          <type>const <ref refid="classID" kindref="compound">ID</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Compares if two objects are of the same class. </para>
        </briefdescription>
        <detaileddescription>
<para>This function compares the class <ref refid="classID" kindref="compound">ID</ref> of the current object with another object that also inherits from <computeroutput><ref refid="classID" kindref="compound">ID</ref></computeroutput>. If the class IDs are the same, the two objects are considered to be of the same class.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput><ref refid="classID" kindref="compound">ID</ref></computeroutput> object to compare against. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if both objects have the same class <ref refid="classID" kindref="compound">ID</ref>, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VoronoiMeshMaker/Misc/id.h" line="130" column="10" bodyfile="include/VoronoiMeshMaker/Misc/id.h" bodystart="130" bodyend="132"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classExportStrategy_1aa740d6b6f02981348006c8d9cba3d943" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>ClassID</type>
        <definition>static ClassID ExportStrategy::getClassID</definition>
        <argsstring>()</argsstring>
        <name>getClassID</name>
        <briefdescription>
<para>Get the class <ref refid="classID" kindref="compound">ID</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A <ref refid="namespaceClassID" kindref="compound">ClassID</ref> enum representing the unique <ref refid="classID" kindref="compound">ID</ref> of this class. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VoronoiMeshMaker/DataExporter/ExportStrategy.h" line="79" column="20" bodyfile="include/VoronoiMeshMaker/DataExporter/ExportStrategy.h" bodystart="79" bodyend="81"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Interface for exporting geometric data to different formats. </para>
    </briefdescription>
    <detaileddescription>
<para>Each concrete export strategy (e.g., VTK, HDF5) implements this interface. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>ID</label>
        <link refid="classID"/>
      </node>
      <node id="1">
        <label>ExportStrategy</label>
        <link refid="classExportStrategy"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>ID</label>
        <link refid="classID"/>
      </node>
      <node id="1">
        <label>ExportStrategy</label>
        <link refid="classExportStrategy"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/VoronoiMeshMaker/DataExporter/ExportStrategy.h" line="56" column="1" bodyfile="include/VoronoiMeshMaker/DataExporter/ExportStrategy.h" bodystart="56" bodyend="94"/>
    <listofallmembers>
      <member refid="classID_1a0ebe5e78a0d04e6cd581e9099e25bb8f" prot="public" virt="virtual"><scope>ExportStrategy</scope><name>classID</name></member>
      <member refid="classExportStrategy_1ae02f9a6a0467e576351ec2cc7e69d493" prot="public" virt="virtual"><scope>ExportStrategy</scope><name>className</name></member>
      <member refid="classExportStrategy_1acc77c6a8a3edc8c19553f53e74031eb3" prot="public" virt="pure-virtual"><scope>ExportStrategy</scope><name>exportData</name></member>
      <member refid="classExportStrategy_1aa740d6b6f02981348006c8d9cba3d943" prot="public" virt="non-virtual"><scope>ExportStrategy</scope><name>getClassID</name></member>
      <member refid="classID_1a97ae807633a588fe5418bfd18cb58549" prot="public" virt="non-virtual"><scope>ExportStrategy</scope><name>sameClass</name></member>
      <member refid="classExportStrategy_1a763418edadbda99832c2f46bf3b3a121" prot="public" virt="virtual"><scope>ExportStrategy</scope><name>~ExportStrategy</name></member>
      <member refid="classID_1ac7c3a6f42b6d115da5456a47a690d14a" prot="public" virt="virtual"><scope>ExportStrategy</scope><name>~ID</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
