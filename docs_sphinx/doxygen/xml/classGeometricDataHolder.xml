<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classGeometricDataHolder" kind="class" language="C++" prot="public">
    <compoundname>GeometricDataHolder</compoundname>
    <basecompoundref refid="classID" prot="public" virt="non-virtual">ID</basecompoundref>
    <includes refid="GeometricDataHolder_8h" local="no">include/VoronoiMeshMaker/Parameters/GeometricDataHolder.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classGeometricDataHolder_1a485564ecdd6e29027377429060af2b34" prot="private" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="GeometricDataHolder_8h_1ad6954cf9876f13551cedf6d7ea4a7615" kindref="member">DataType</ref> &gt;</type>
        <definition>std::map&lt;std::string, DataType&gt; GeometricDataHolder::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <briefdescription>
<para>The internal map storing the variables, where each variable is identified by a string key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VoronoiMeshMaker/Parameters/GeometricDataHolder.h" line="131" column="14" bodyfile="include/VoronoiMeshMaker/Parameters/GeometricDataHolder.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classGeometricDataHolder_1a58d992e92bd7f6208a6ee7b8e1e6a224" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="virtual">
        <type>std::string_view</type>
        <definition>virtual std::string_view GeometricDataHolder::className</definition>
        <argsstring>() const noexcept override</argsstring>
        <name>className</name>
        <reimplements refid="classID_1aa24a23fc35c047319634ca6693c671b6">className</reimplements>
        <briefdescription>
<para>Get the class name. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A string view representing the name of this class. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VoronoiMeshMaker/Parameters/GeometricDataHolder.h" line="82" column="30" bodyfile="include/VoronoiMeshMaker/Parameters/GeometricDataHolder.h" bodystart="82" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classGeometricDataHolder_1ae6cc84ef17fb7fa914956417654199d3" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="virtual">
        <type>ClassID</type>
        <definition>virtual ClassID GeometricDataHolder::classID</definition>
        <argsstring>() const noexcept override</argsstring>
        <name>classID</name>
        <reimplements refid="classID_1a0ebe5e78a0d04e6cd581e9099e25bb8f">classID</reimplements>
        <briefdescription>
<para>Get the class <ref refid="classID" kindref="compound">ID</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A <ref refid="namespaceClassID" kindref="compound">ClassID</ref> enum representing the unique <ref refid="classID" kindref="compound">ID</ref> of this class. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VoronoiMeshMaker/Parameters/GeometricDataHolder.h" line="91" column="21" bodyfile="include/VoronoiMeshMaker/Parameters/GeometricDataHolder.h" bodystart="91" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classGeometricDataHolder_1a90c4b365a04fc430f6b27de9693ae8de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void GeometricDataHolder::addValue</definition>
        <argsstring>(const std::string &amp;key, T value)</argsstring>
        <name>addValue</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>T</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Adds a value to the <ref refid="classGeometricDataHolder" kindref="compound">GeometricDataHolder</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the value to be added. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The string key associated with the value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be stored.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This method allows you to store any supported data type using a string as the key. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VoronoiMeshMaker/Parameters/GeometricDataHolder.h" line="104" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classGeometricDataHolder_1a9417bce7b6c73b1c1f4823ed8f312ecf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::optional&lt; T &gt;</type>
        <definition>std::optional&lt;T&gt; GeometricDataHolder::getValue</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>getValue</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Retrieves a value from the <ref refid="classGeometricDataHolder" kindref="compound">GeometricDataHolder</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the value to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The string key associated with the value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::optional&lt;T&gt; The value if found and of the correct type, or std::nullopt if not found or of the wrong type.</para>
</simplesect>
Use this method to access stored values by their string key and ensure the correct type is returned. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VoronoiMeshMaker/Parameters/GeometricDataHolder.h" line="115" column="20"/>
      </memberdef>
      <memberdef kind="function" id="classID_1a97ae807633a588fe5418bfd18cb58549" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool ID::sameClass</definition>
        <argsstring>(const ID &amp;other) const noexcept</argsstring>
        <name>sameClass</name>
        <param>
          <type>const <ref refid="classID" kindref="compound">ID</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Compares if two objects are of the same class. </para>
        </briefdescription>
        <detaileddescription>
<para>This function compares the class <ref refid="classID" kindref="compound">ID</ref> of the current object with another object that also inherits from <computeroutput><ref refid="classID" kindref="compound">ID</ref></computeroutput>. If the class IDs are the same, the two objects are considered to be of the same class.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>other</parametername>
</parameternamelist>
<parameterdescription>
<para>The <computeroutput><ref refid="classID" kindref="compound">ID</ref></computeroutput> object to compare against. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if both objects have the same class <ref refid="classID" kindref="compound">ID</ref>, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VoronoiMeshMaker/Misc/id.h" line="130" column="10" bodyfile="include/VoronoiMeshMaker/Misc/id.h" bodystart="130" bodyend="132"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classGeometricDataHolder_1ad1c37da061d9a45c777b71b2a7f6a7a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, const GeometricDataHolder &amp;holder)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type>const <ref refid="classGeometricDataHolder" kindref="compound">GeometricDataHolder</ref> &amp;</type>
          <declname>holder</declname>
        </param>
        <briefdescription>
<para>Prints all stored values in the <ref refid="classGeometricDataHolder" kindref="compound">GeometricDataHolder</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>os</parametername>
</parameternamelist>
<parameterdescription>
<para>The output stream to which the values will be printed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>holder</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classGeometricDataHolder" kindref="compound">GeometricDataHolder</ref> object containing the values. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::ostream&amp; The output stream after printing the values.</para>
</simplesect>
This operator overload allows printing all variables stored in the <ref refid="classGeometricDataHolder" kindref="compound">GeometricDataHolder</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/VoronoiMeshMaker/Parameters/GeometricDataHolder.h" line="125" column="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Stores multiple variables of different types using a map where each variable is identified by a string key. </para>
    </briefdescription>
    <detaileddescription>
<para>The class uses std::variant to store different types of data and provides methods to add, retrieve, and print variables. This class is part of the &quot;parameters&quot; group and inherits from the <ref refid="classID" kindref="compound">ID</ref> class for identification purposes. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>ID</label>
        <link refid="classID"/>
      </node>
      <node id="1">
        <label>GeometricDataHolder</label>
        <link refid="classGeometricDataHolder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>ID</label>
        <link refid="classID"/>
      </node>
      <node id="1">
        <label>GeometricDataHolder</label>
        <link refid="classGeometricDataHolder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/VoronoiMeshMaker/Parameters/GeometricDataHolder.h" line="75" column="1" bodyfile="include/VoronoiMeshMaker/Parameters/GeometricDataHolder.h" bodystart="75" bodyend="132"/>
    <listofallmembers>
      <member refid="classGeometricDataHolder_1a90c4b365a04fc430f6b27de9693ae8de" prot="public" virt="non-virtual"><scope>GeometricDataHolder</scope><name>addValue</name></member>
      <member refid="classGeometricDataHolder_1ae6cc84ef17fb7fa914956417654199d3" prot="public" virt="virtual"><scope>GeometricDataHolder</scope><name>classID</name></member>
      <member refid="classGeometricDataHolder_1a58d992e92bd7f6208a6ee7b8e1e6a224" prot="public" virt="virtual"><scope>GeometricDataHolder</scope><name>className</name></member>
      <member refid="classGeometricDataHolder_1a485564ecdd6e29027377429060af2b34" prot="private" virt="non-virtual"><scope>GeometricDataHolder</scope><name>data_</name></member>
      <member refid="classGeometricDataHolder_1a9417bce7b6c73b1c1f4823ed8f312ecf" prot="public" virt="non-virtual"><scope>GeometricDataHolder</scope><name>getValue</name></member>
      <member refid="classGeometricDataHolder_1ad1c37da061d9a45c777b71b2a7f6a7a1" prot="public" virt="non-virtual"><scope>GeometricDataHolder</scope><name>operator&lt;&lt;</name></member>
      <member refid="classID_1a97ae807633a588fe5418bfd18cb58549" prot="public" virt="non-virtual"><scope>GeometricDataHolder</scope><name>sameClass</name></member>
      <member refid="classID_1ac7c3a6f42b6d115da5456a47a690d14a" prot="public" virt="virtual"><scope>GeometricDataHolder</scope><name>~ID</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
