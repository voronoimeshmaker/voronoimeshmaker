<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="GeometricDataHolder_8tpp" kind="file" language="C++">
    <compoundname>GeometricDataHolder.tpp</compoundname>
    <includedby refid="GeometricDataHolder_8h" local="no">include/VoronoiMeshMaker/Parameters/GeometricDataHolder.h</includedby>
    <invincdepgraph>
      <node id="9">
        <label>include/VoronoiMeshMaker/Shape/Shape2D/Polygon.h</label>
        <link refid="Polygon_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>src/VoronoiMeshMaker/Shape/Shape2D/Rectangle.cpp</label>
        <link refid="Rectangle_8cpp"/>
      </node>
      <node id="18">
        <label>src/VoronoiMeshMaker/Shape/Shape.cpp</label>
        <link refid="Shape_8cpp"/>
      </node>
      <node id="11">
        <label>include/VoronoiMeshMaker/Shape/Shape2D/Rectangle.h</label>
        <link refid="Rectangle_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>src/VoronoiMeshMaker/Shape/ShapeFactory.cpp</label>
        <link refid="ShapeFactory_8cpp"/>
      </node>
      <node id="4">
        <label>include/VoronoiMeshMaker/Shape/Shape2D/Shape2D.h</label>
        <link refid="Shape2D_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>src/VoronoiMeshMaker/Shape/Shape2D/CommaSeparatedValues.cpp</label>
        <link refid="CommaSeparatedValues_8cpp"/>
      </node>
      <node id="7">
        <label>include/VoronoiMeshMaker/Shape/Shape2D/Ellipse.h</label>
        <link refid="Ellipse_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>src/VoronoiMeshMaker/Shape/Shape2D/Polygon.cpp</label>
        <link refid="Polygon_8cpp"/>
      </node>
      <node id="3">
        <label>include/VoronoiMeshMaker/Shape/Shape.h</label>
        <link refid="Shape_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>include/VoronoiMeshMaker/Parameters/GeometricDataHolder.tpp</label>
        <link refid="GeometricDataHolder_8tpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>src/VoronoiMeshMaker/Shape/Shape2D/Ellipse.cpp</label>
        <link refid="Ellipse_8cpp"/>
      </node>
      <node id="5">
        <label>include/VoronoiMeshMaker/Shape/Shape2D/CommaSeparatedValues.h</label>
        <link refid="CommaSeparatedValues_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>src/VoronoiMeshMaker/Shape/Shape2D/Star.cpp</label>
        <link refid="Star_8cpp"/>
      </node>
      <node id="15">
        <label>src/VoronoiMeshMaker/Shape/Shape2D/Shape2D.cpp</label>
        <link refid="Shape2D_8cpp"/>
      </node>
      <node id="13">
        <label>include/VoronoiMeshMaker/Shape/Shape2D/Star.h</label>
        <link refid="Star_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>include/VoronoiMeshMaker/Shape/ShapeFactory.h</label>
        <link refid="ShapeFactory_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>include/VoronoiMeshMaker/Parameters/GeometricDataHolder.h</label>
        <link refid="GeometricDataHolder_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">//==============================================================================</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Name<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>GeometricDataHolder.tpp</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Author<sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Joao<sp/>Flavio<sp/>Vieira<sp/>de<sp/>Vasconcellos</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Version<sp/><sp/><sp/><sp/><sp/>:<sp/>1.0</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Description<sp/>:<sp/>Template<sp/>implementations<sp/>for<sp/>the<sp/>GeometricDataHolder<sp/>class.</highlight></codeline>
<codeline><highlight class="normal">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>file<sp/>contains<sp/>the<sp/>template<sp/>function<sp/>implementations<sp/>for</highlight></codeline>
<codeline><highlight class="normal">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>GeometricDataHolder<sp/>class.</highlight></codeline>
<codeline><highlight class="normal">//</highlight></codeline>
<codeline><highlight class="normal">//<sp/>Copyright<sp/><sp/><sp/>:<sp/>Copyright<sp/>(C)<sp/>2024<sp/>Joao<sp/>Flavio<sp/>Vasconcellos</highlight></codeline>
<codeline><highlight class="normal">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(jflavio<sp/>at<sp/>iprj.uerj.br)</highlight></codeline>
<codeline><highlight class="normal">//</highlight></codeline>
<codeline><highlight class="normal">//<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline><highlight class="normal">//<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline><highlight class="normal">//<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License.</highlight></codeline>
<codeline><highlight class="normal">//</highlight></codeline>
<codeline><highlight class="normal">//<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline><highlight class="normal">//<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline><highlight class="normal">//<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/>See<sp/>the</highlight></codeline>
<codeline><highlight class="normal">//<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline><highlight class="normal">//</highlight></codeline>
<codeline><highlight class="normal">//<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline><highlight class="normal">//<sp/>along<sp/>with<sp/>this<sp/>program.<sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline><highlight class="normal">//==============================================================================</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">/**</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>@file<sp/>GeometricDataHolder.tpp</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>@brief<sp/>Template<sp/>implementations<sp/>for<sp/>the<sp/>GeometricDataHolder<sp/>class.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>the<sp/>template<sp/>function<sp/>implementations<sp/>for<sp/>the<sp/>GeometricDataHolder<sp/>class.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>@ingroup<sp/>parameters</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>This<sp/>file<sp/>defines<sp/>the<sp/>methods<sp/>used<sp/>to<sp/>add<sp/>and<sp/>retrieve<sp/>values<sp/>from<sp/>the<sp/>GeometricDataHolder<sp/>class.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>It<sp/>provides<sp/>template<sp/>specializations<sp/>for<sp/>the<sp/>supported<sp/>data<sp/>types.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>@version<sp/>1.0</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>@date<sp/>2024</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License,<sp/>version<sp/>3.</highlight></codeline>
<codeline><highlight class="normal"><sp/>*/</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">VORMAKER_NAMESPACE_OPEN</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Remove<sp/>Shape2D<sp/>or<sp/>any<sp/>specific<sp/>geometric<sp/>shapes<sp/>from<sp/>GeometricDataHolder.</highlight></codeline>
<codeline><highlight class="normal">//<sp/>From<sp/>now<sp/>on,<sp/>geometric<sp/>shapes<sp/>will<sp/>not<sp/>be<sp/>handled<sp/>within<sp/>this<sp/>holder.</highlight></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">void<sp/>GeometricDataHolder::addValue(const<sp/>std::string&amp;<sp/>key,<sp/>T<sp/>value)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>data_[key]<sp/>=<sp/>value;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">template&lt;typename<sp/>T&gt;</highlight></codeline>
<codeline><highlight class="normal">std::optional&lt;T&gt;<sp/>GeometricDataHolder::getValue(const<sp/>std::string&amp;<sp/>key)<sp/>const<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>auto<sp/>it<sp/>=<sp/>data_.find(key);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(it<sp/>!=<sp/>data_.end())<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(auto<sp/>pval<sp/>=<sp/>std::get_if&lt;T&gt;(&amp;(it-&gt;second)))<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>*pval;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>std::nullopt;<sp/><sp/>//<sp/>Return<sp/>nullopt<sp/>if<sp/>the<sp/>type<sp/>or<sp/>key<sp/>is<sp/>invalid</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Parallelize<sp/>the<sp/>visit<sp/>operation<sp/>using<sp/>parallel<sp/>algorithms<sp/>in<sp/>case<sp/>of<sp/>large<sp/>data</highlight></codeline>
<codeline><highlight class="normal">inline<sp/>std::ostream&amp;<sp/>operator&lt;&lt;(std::ostream&amp;<sp/>os,<sp/>const<sp/>GeometricDataHolder&amp;<sp/>holder)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::for_each(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::execution::par,<sp/>holder.data_.begin(),<sp/>holder.data_.end(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[&amp;os](const<sp/>auto&amp;<sp/>pair)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>pair.first<sp/>&lt;&lt;<sp/>&quot;:<sp/>&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::visit([&amp;os](auto&amp;&amp;<sp/>arg)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>using<sp/>T<sp/>=<sp/>std::decay_t&lt;decltype(arg)&gt;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>constexpr<sp/>(std::is_same_v&lt;T,<sp/>std::list&lt;int&gt;&gt;<sp/>||<sp/>std::is_same_v&lt;T,<sp/>std::list&lt;Real&gt;&gt;<sp/>||</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same_v&lt;T,<sp/>std::list&lt;vmm::gtp::Point2D&gt;&gt;<sp/>||<sp/>std::is_same_v&lt;T,<sp/>std::list&lt;vmm::gtp::Point3D&gt;&gt;)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;[<sp/>&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(const<sp/>auto&amp;<sp/>elem<sp/>:<sp/>arg)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>elem<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;]&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>constexpr<sp/>(std::is_same_v&lt;T,<sp/>std::vector&lt;int&gt;&gt;<sp/>||<sp/>std::is_same_v&lt;T,<sp/>std::vector&lt;Real&gt;&gt;<sp/>||</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::is_same_v&lt;T,<sp/>std::vector&lt;vmm::gtp::Point2D&gt;&gt;<sp/>||<sp/>std::is_same_v&lt;T,<sp/>std::vector&lt;vmm::gtp::Point3D&gt;&gt;)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;[<sp/>&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(const<sp/>auto&amp;<sp/>elem<sp/>:<sp/>arg)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>elem<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>&quot;]&quot;;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>arg;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},<sp/>pair.second);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>os;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">VORMAKER_NAMESPACE_CLOSE</highlight></codeline>
    </programlisting>
    <location file="include/VoronoiMeshMaker/Parameters/GeometricDataHolder.tpp"/>
  </compounddef>
</doxygen>
